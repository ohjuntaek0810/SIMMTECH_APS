@page
@model HS.Web.Pages.lot_routing_sequence_test
@{
    string CLIENT = Model.Params["CLIENT"].AsString();
    string R = Model.Params["R"].AsString();
    string W = Model.Params["W"].AsString();
    string first_plan_id = Model.Params["first_plan_id"].AsString();
}


<script>
    // 최신버번 PLAN_ID
    let first_plan_id = '@first_plan_id';

    $hs.handler = {
        "btn_reset" : {
            click: function() {
                // 값 초기화
                $hs.$("pnlSearch").reset();
            }
        },
        "btn_plan_id_box_open": {
            click: function () {
                $hs.$("plan_id").open();
            }
        },
        "btnSearch": {
            click: function () {

                let toServer = {};
                toServer["terms"] = $hs.$("pnlSearch").val();

                // Item_code 나 LOT NAME 둘 중 하나는 입력 되어야함 -> 제거
                // if (toServer["terms"].item_code.length == 0 && toServer["terms"].srch_lot_id.length == 0 ) {
                //     alert("Item Code 나 LOT NAME 중 하나 이상 입력해 주세요.");
                //     return;
                // }


                $hs.fetch({
                    command: "search",
                    param: toServer
                }).then(fromServer => {
                    $hs.$("lot_routing_sequence_info").data(fromServer["data"]);
                    $('#total_cnt').text('(Total Count:' + fromServer["data"].length + ')');
                }).catch(e => $hs.errorBox(e))
            }
        },
        "lot_routing_sequence_info": {
            contextHeaderClick: function (data) {
                $hs.util.$CommonUtil.getHeaderContextClick(data);
            }
        },
        // "btn_grid_save": {
        //     click: function () {
        //         alert('준비중 입니다.');
        //     },
        // },
        "btn_excel_download": {
            click : function() {
                $hs.util.$CommonUtil.excelDownload("lot_routing_sequence_info", "LOT_ROUTING_SEQUENCE_INFO");
            }
        },
        "btn_grid_setting" : {  // dimension 세팅
            click : function() {
                // 그리드 세팅 modal open
                // param : modal_id, grid_id, dimension_grid_id
                $hs.util.$CommonUtil.openGridSettingModal("modalDialog", "lot_routing_sequence_info", "dimension_grid");
            }
        },
        "btnSave_dimension" : { // dimension 변경내용 저장
            click : function() {
                $hs.util.$CommonUtil.saveGridSetting("modalDialog", "lot_routing_sequence_info", "dimension_grid");
            }
        }
    }

    $hs.load(() => {
        // 현재 localStorage에 저장된 메뉴 ID 가져옴
        var curMenuId = localStorage.getItem("curMenuId"); 
        // 즐겨찾기 여부 체크 후 버튼 리스너 추가
        $hs.util.$CommonUtil.checkFavorite(curMenuId);

        // search
        $hs.ui.button.init({ id: "btnSearch", class: ["smart-btn", "btn-search"] });

        // grid save
        // $hs.ui.button.init({ id: "btn_grid_save", enabled: @W });

        // excel download
        $hs.ui.button.init({ id: "btn_excel_download"});
          
        // panel
        $hs.html.panel.init({ id: "pnlSearch" });

        // grid setting
        $hs.ui.button.init({ id: "btn_grid_setting"});
        $hs.ui.button.init({ id: "btnSave_dimension"});

        // text Box open
        $hs.ui.button.init({ id: "btn_plan_id_box_open" });


        $hs.ui.button.init({ id: "btn_reset" });

        // lot_routing_sequence_info
        $hs.dx.grid.init({
            id: "lot_routing_sequence_info",
            width: "100%",
            height: "100%",
            sortable: true,
            selectMode: "single",
            rownumber: false,
            filterable: true,
            editable: true,
            handler: true,
            reOrdering: true, // 컬럼 재배치 여부
            headerContextmenu : ["Sort Asc", "Sort Desc", "Sort Clear", "Fixed", "Unfixed", "Hide", "Hide Clear",
                {
                    menu : "CAL",
                    child : [
                        "Count",
                        "Avg",
                        "Max",
                        "Min",
                        "Sum",
                        "Std. Div"
                    ]
                }
            ],
        })
        // 헤더컬럼 초기값 정의
        const defaultColumns = [
            { dataField: "MASTER_ID", label: "MASTER_ID", width: 100, editable: false, visible: false },
            { dataField: "PLAN_ID", label: "PLAN_ID", width: 150, editable: false, visible: false },
            { dataField: "ITEM_CODE", label: "ITEM_CODE", width: 130, editable: false },
            { dataField: "REV", label: "REV", width: 90, editable: false },
            { dataField: "JOB_ID", label: "JOB_ID", width: 80, editable: false, visible: false},
            { dataField: "JOB_NAME", label: "JOB_NAME", width: 130, editable: false },
            { dataField: "LOT_STATUS", label: "LOT_STATUS", width: 110, editable: false },
            { dataField: "OPERATION_SEQ_NUM", label: "OPERATION_SEQ_NUM", width: 160, editable: false },
            { dataField: "RES_CAPA_GROUP_NAME", label: "RES_CAPA_GROUP_NAME", width: 230, editable: false },
            { dataField: "DEPT_CODE", label: "DEPT_CODE", width: 130, editable: false },
            { dataField: "DEPT_NAME", label: "DEPT_NAME", width: 170, editable: false },
            { dataField: "SITE", label: "SITE", width: 100, editable: false },
            { dataField: "RES_ID", label: "RES_ID", width: 160, editable: false, visible: false },
            { dataField: "APS_RES_NAME", label: "APS_RES_NAME", width: 150, editable: false },
            { dataField: "OWN_OUT_GBN", label: "OWN_OUT_GBN", width: 100, editable: false, visible: false },
            { dataField: "OPERATION_QTY", label: "OPERATION_QTY", width: 100, editable: false, type:"number" },
            { dataField: "PLAN DATE", label: "PLAN DATE", width: 100, editable: false },
            { dataField: "LEAD TIME", label: "LEAD TIME(HR)", width: 100, editable: false, type:"number", precision:2 },
            { dataField: "LEAD_TIME_WITH_WAIT", label: "LEAD TIME WITH WAIT(HR)", width: 150, editable: false, type:"number", precision:2 },
            { dataField: "START TIME", label: "START TIME", width: 130, editable: false, type: "datetime",formatString : "yyyy-MM-dd HH:mm" },
            { dataField: "END TIME", label: "END TIME", width: 130, editable: false, type: "datetime",formatString : "yyyy-MM-dd HH:mm" }
        ];

        // 그리드 컬럼가져오기
        // 1. id로 사용할 grid_id(js용)
        // 2. 초기화용 컬럼들 (LIST)
        // <div id="lot_routing_sequence_info" data-grid-id="RESOURCE_GRID"></div>
        $hs.util.$CommonUtil.getGridSetting("lot_routing_sequence_info", defaultColumns);

        const _instance = $hs.$("lot_routing_sequence_info")._instance;
        // 컬럼 라인 그리기
        _instance.option('showColumnLines', true);
        _instance.option('rowAlternationEnabled', false);
        _instance.option('showBorders', true);
        _instance.option('scrolling', {
            mode: "standard",
            showScrollbar: 'always',
            useNative: true
        });


        const gridInstance = $hs.$("lot_routing_sequence_info")._instance;

        function mergeCellsByFields(fields) {
            const rows = gridInstance.getVisibleRows();
            const columns = gridInstance.getVisibleColumns();

            // 먼저 기존 병합 상태 초기화
            for (let i = 0; i < rows.length; i++) {
                fields.forEach(fieldName => {
                    const columnIndex = columns.findIndex(col => col.dataField === fieldName);
                    const cell = gridInstance.getCellElement(i, columnIndex);
                    if (cell && cell.length) {
                        // display, rowspan 초기화
                        cell[0].style.display = '';
                        cell[0].removeAttribute('rowSpan');
                    }
                });
            }

            // 본격 병합 로직
            fields.forEach(fieldName => {
                const columnIndex = columns.findIndex(col => col.dataField === fieldName);

                let prevValue = null;
                let startRowIndex = 0;
                let spanCount = 1;

                for (let i = 0; i < rows.length; i++) {
                    const currentValue = rows[i].data[fieldName];

                    if (currentValue === prevValue) {
                        spanCount++;
                        const cell = gridInstance.getCellElement(i, columnIndex);
                        if (cell && cell.length) {
                            cell[0].style.display = 'none';
                        }
                    } else {
                        // 이전 그룹 병합 처리
                        if (spanCount > 1) {
                            const topCell = gridInstance.getCellElement(startRowIndex, columnIndex);
                            if (topCell && topCell.length) {
                                topCell[0].rowSpan = spanCount;
                                topCell[0].style.verticalAlign = 'middle';
                            }
                        }

                        // 새 그룹 시작
                        prevValue = currentValue;
                        startRowIndex = i;
                        spanCount = 1;
                    }
                }

                // 마지막 그룹 병합 처리
                if (spanCount > 1) {
                    const topCell = gridInstance.getCellElement(startRowIndex, columnIndex);
                    if (topCell && topCell.length) {
                        topCell[0].rowSpan = spanCount;
                        topCell[0].style.verticalAlign = 'middle';
                    }
                }
            });
        }

        // gridInstance.option("scrolling", {
        //     mode : "standard"
        // });
        gridInstance.getScrollable().on("scroll", function() {
            mergeCellsByFields(["ITEM_CODE", "REV", "JOB_NAME"]);
        });


        // gridInstance.option("scrolling.mode", "standard");
        gridInstance.option("onContentReady", function(e) {
            mergeCellsByFields(["ITEM_CODE", "REV", "JOB_NAME"]);
        });








        // demension grid
        $hs.dx.grid.init({
            id: "dimension_grid",
            width: "100%",
            height: "300px",
            sortable: true,
            selectMode: "single",
            dragRow: true,
            rownumber: false,
            filterable: false,
            editable: true,
            handler: true,
        }).columns(col => {
            col.add({ dataField: "dataField", label: "dataField", width: 200, editable: false, visible:false })
            col.add({ dataField: "editable", label: "editable", width: 200, editable: false, visible:false })
            col.add({ dataField: "name", label: "NAME", width: 200, editable: false })
            col.add({ dataField: "visible", label: "VISIBLE", width: 80, editable: true, type: "boolean" })
            col.add({ dataField: "width", label: "WIDTH", width: 80, editable: true })
            col.add({ dataField: "fix", label: "FIX", width: 80, editable: true, type: "boolean" })
        });

        $hs.html.select.init({
            id: "plan_id",
            dataurl: "/api/data/PLAN_ID",
            valueMember: "PLAN_ID",
            displayMember: "PLAN_ID",
            val: first_plan_id
        });
        
        // 팝업
        $hs.html.$popup.init('modalDialog');
    });

</script>

<!-- s:Content Header (Page header) -->
<div class="content-header">
    <div class="header-location">
        <div class="header-title">
            <span class="sub-title">Lot별 공정순서별</span>
            <div class="toggle-container-favorites">
                <input type="checkbox" id="favorites-toggle" hidden>
                <label for="favorites-toggle" class="favorites-toggle">
                    <i class="bx bx-star"></i>
                </label>
            </div>
        </div>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="#link"><i class="xi-ico xi-home"></i></a></li>
            <li class="breadcrumb-item active">납기분석</li>
            <li class="breadcrumb-item active">Lot별 공정순서별</li>
        </ol>
    </div>
    <div class="header-setting">
        <div class="header-btn">
            <div class="filter-toggle-container">
                <span class="toggle-title">Search Area</span>
                <input type="checkbox" id="favorites-toggle-switch" hidden checked>
                <label for="favorites-toggle-switch" class="switch"></label>
            </div>
        </div>
    </div>
</div>
<!-- /e:Content Header -->
<hr>
<!-- s:content -->
<section class="content-body" flex>
    <div class="content row" flex>
        <div class="col-lg-12" flex>
            <div class="content-box content-filter">
                <div class="box-body">
                    <div class="list-filter">
                        <div id="pnlSearch" class="filter-content form-inline">

                            <div class="form-group">
                                <div class="control-label"><label>PLAN ID</label></div>
                                <div class="control-form">
                                    <select class="form-control" id="plan_id" hs-df="PLAN_ID" hs-handler="true"></select>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="control-label"><label>Item Code</label></div>
                                <div class="control-form">
                                    <input type="text" id="item_code" class="form-control" placeholder="Search" hs-df="item_code">
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="control-label"><label>LOT NAME</label></div>
                                <div class="control-form">
                                    <input type="text" id="srch_lot_id" class="form-control" placeholder="Search" hs-df="srch_lot_id">
                                </div>
                            </div>

                            <button id="btn_reset" type="button" class="btn btn-reset-icon"><span class="blind">filter reset</span></button>
                            <button id="btnSearch" type="button" class="btn btn-search-icon">Search<span class="blind">filter search</span></button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="content-box" flex>
                <!-- 헤더부분 정의-->
                <div class="box-header">
                    <div class="header-title">
                        Lot별 공정순서별 정보
                        <span class="title-list-count">
                            <small id="total_cnt"></small><small id="grid_cal" class="" style="color: black;margin-left: 10px;font-weight: 500;"></small>
                        </span>
                    </div>
                    <div class="header-btn">
                        @* <button id="btn_grid_save" type="button" class="btn btn-save">save</button> *@
                        <button id="btn_excel_download" type="button" class="btn btn-download">excel</button>
                        <button id="btn_grid_setting" type="button" class="btn btn-setting-icon"><span class="blind">setting</span></button>
                    </div>
                </div>
                <!-- 바디부분 정의-->
                <div class="box-body" flex>
                    <div class="grid-container" flex>
                        <div id="lot_routing_sequence_info" data-grid-id="LOT_ROUTING_SEQUENCE"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- /e:content -->
<!-- s:modal -->
<div id="modalDialog" style="display:none; position:absolute; height:400px;width:600px;">
    <div class="modal-content animate-top">
        <div id="modal-header" class="modal-header">
            <h5 class="modal-title">PERSONALIZATION</h5>
            <button type="button" class="btn-popup-close">
                <span class="xi-close-min" aria-hidden="true"></span>
            </button>
        </div>
        <div class="modal-body" id="panel_input">
            <div class="row">
                <div class="col-sm-12">
                    <div class="form-group">
                        <div class="control-label"><label>Dimension</label></div>
                    </div>
                </div>
            </div>
            <div class="grid-container" flex>
                <div id="dimension_grid"></div>
            </div>
        </div>
        <div class="modal-footer">
            <button id="btnSave_dimension" type="button" class="btn btn-save">저장</button>
            <button type="button" class="btn btn-close btn-popup-close">닫기</button>
        </div>
    </div>
</div>
<!-- /e:modal -->