@page
@model HS.Web.Pages.lot_routing_capa
@{
    string CLIENT = Model.Params["CLIENT"].AsString();
    string R = Model.Params["R"].AsString();
    string W = Model.Params["W"].AsString();
}


<script>

    // 헤더컬럼 초기값 정의
    const defaultColumns = [
        { dataField: "RESOURCE", label: "RESOURCE", width: 100, editable: false },
        { dataField: "기준정보", label: "Lot ID", width: 130, editable: false },
        { dataField: "Item", label: "Oper SEQ", width: 130, editable: false }
    ];

    $hs.handler = {
        "btn_reset" : {
            click: function() {
                // 값 초기화
                $hs.$("pnlSearch").reset();
            }
        },
        "btnSearch": {
            click: function () {

                let toServer = {};
                toServer["terms"] = $hs.$("pnlSearch").val();

                console.log(toServer);

                $hs.fetch({
                    command: "search",
                    param: toServer
                }).then(fromServer => {
                    //  조회한 날짜로 헤더컬럼 재설정
                    const searchColumns = [];
                    const srchStartDate = new Date(toServer["terms"].start_date);
                    const srchEndDate = new Date(toServer["terms"].end_date);

                    defaultColumns.forEach(col => searchColumns.push(col));

                    for (let d = new Date(srchStartDate); d.getTime() <= srchEndDate.getTime(); d.setDate(d.getDate() + 1)) {
                        const dateStr = formatDate(d);
                        const column = {
                            dataField: dateStr,
                            label: dateStr,
                            width: 100,
                            editable: false
                        };
                        searchColumns.push(column);
                    }

                    $hs.$("resource_capa_info").columns(col => {
                        searchColumns.forEach(column => {
                            col.add({
                                dataField: column.dataField,
                                label: column.label,
                                width: column.width,
                                visible: (column.visible === undefined || column.visible === true || column.visible === "True"),
                                fixed: column.fixed === true || column.fixed === "True" ? true : false,
                                editable: column.editable === true || column.editable === "True" ? true : false
                            });
                        });
                    });



                    $hs.$("resource_capa_info").data(fromServer["data"]);
                }).catch(e => $hs.errorBox(e))
            }
        },
        "btn_grid_save": {
            click: function () {
                alert('준비중 입니다.');
            },
        },
        "btn_excel_download": {
            click : function() {
                let toServer = {};

                toServer["terms"] = $hs.$("pnlSearch").val();
                console.log("toServer = " + JSON.stringify(toServer));

                $hs.post({
                    command: "ExcelDownload",
                    param: toServer
                });
            }
        },
        "btn_grid_setting" : {  // dimension 세팅
            click : function() {
                // 그리드 세팅 modal open
                // param : modal_id, grid_id, dimension_grid_id
                $hs.util.$CommonUtil.openGridSettingModal("modalDialog", "resource_capa_info", "dimension_grid");
            }
        },
        "btnSave_dimension" : { // dimension 변경내용 저장
            click : function() {
                $hs.util.$CommonUtil.saveGridSetting("modalDialog", "resource_capa_info", "dimension_grid");
            }
        }
    }

    $hs.load(() => {
        // 현재 localStorage에 저장된 메뉴 ID 가져옴
        var curMenuId = localStorage.getItem("curMenuId"); 
        // 즐겨찾기 여부 체크 후 버튼 리스너 추가
        $hs.util.$CommonUtil.checkFavorite(curMenuId);

        // search
        $hs.ui.button.init({ id: "btnSearch", class: ["smart-btn", "btn-search"] });

        // grid save
        $hs.ui.button.init({ id: "btn_grid_save", enabled: @W });

        // excel download
        $hs.ui.button.init({ id: "btn_excel_download"});
          
        // panel
        $hs.html.panel.init({ id: "pnlSearch" });

        // grid setting
        $hs.ui.button.init({ id: "btn_grid_setting"});
        $hs.ui.button.init({ id: "btnSave_dimension"});

        // resource_capa_info
        $hs.dx.grid.init({
            id: "resource_capa_info",
            width: "100%",
            height: "100%",
            sortable: true,
            selectMode: "single",
            rownumber: false,
            filterable: true,
            editable: true,
            handler: true,
            reOrdering: true, // 컬럼 재배치 여부
        })
        

        // 오늘 날짜 기준
        const today = new Date();

        // 이번 달 첫째 날
        const startDate = new Date(today.getFullYear(), today.getMonth(), 1);

        // 이번 달 마지막 날
        const endDate = new Date(today.getFullYear(), today.getMonth() + 1, 0);

        // 실제 input에 설정
        document.getElementById('start_date').value = formatDate(startDate);
        document.getElementById('end_date').value = formatDate(endDate);

        // 기존 default 컬럼 초기화
        const firstColumn = [];
        defaultColumns.forEach(col => firstColumn.push(col));

        // startDate ~ endDate 까지 헤더 컬럼 생성 필요
        // 시작일 ~ 종료일까지 반복해서 컬럼 생성
        for (let d = new Date(startDate); d <= endDate; d.setDate(d.getDate() + 1)) {
            const dateStr = formatDate(d);
            firstColumn.push({
                dataField: dateStr,
                label: dateStr,
                width: 100,
                editable: false
            });
        }



        // 그리드 컬럼가져오기
        // 1. id로 사용할 grid_id(js용)
        // 2. 초기화용 컬럼들 (LIST)
        // <div id="resource_capa_info" data-grid-id="RESOURCE_GRID"></div>
        $hs.util.$CommonUtil.getGridSetting("resource_capa_info", firstColumn);

        // TODO : 추후 협의 필요한점
        // 뒤에 날짜 헤더까지 그리드 셋팅이 들어가면 안될 것 같음..날짜가 들어가는 그리드 같은 경우에는 앞에 기본정보만 셋팅 할 수 있도록 협의 필요.



        // demension grid
        $hs.dx.grid.init({
            id: "dimension_grid",
            width: "100%",
            height: "300px",
            sortable: true,
            selectMode: "single",
            dragRow: true,
            rownumber: false,
            filterable: false,
            editable: true,
            handler: true,
        }).columns(col => {
            col.add({ dataField: "dataField", label: "dataField", width: 200, editable: false, visible:false })
            col.add({ dataField: "editable", label: "editable", width: 200, editable: false, visible:false })
            col.add({ dataField: "name", label: "NAME", width: 200, editable: false })
            col.add({ dataField: "visible", label: "VISIBLE", width: 80, editable: true, type: "boolean" })
            col.add({ dataField: "width", label: "WIDTH", width: 80, editable: true })
            col.add({ dataField: "fix", label: "FIX", width: 80, editable: true, type: "boolean" })
        });


        // Search Pannel
        $hs.html.select.init({ 
            id: "group_id", 
            data: [{ label: "전체", value: "" },{ label: "SPS", value: "SPS" }, { label: "HDI", value: "HDI" }],
            val: "" 
        });
        
        // 팝업
        $hs.html.$popup.init('modalDialog');




        
    });

    // yyyy-mm-dd 포맷으로 변환하는 함수
    function formatDate(date) {
        const yyyy = date.getFullYear();
        const mm = String(date.getMonth() + 1).padStart(2, '0'); // month: 0-based
        const dd = String(date.getDate()).padStart(2, '0');
        console.log(`${yyyy}-${mm}-${dd}`);
        return `${yyyy}-${mm}-${dd}`;
    }

</script>

<!-- s:Content Header (Page header) -->
<div class="content-header">
    <div class="header-location">
        <div class="header-title">
            <span class="sub-title">설비 Capa실적 분석</span>
            <div class="toggle-container-favorites">
                <input type="checkbox" id="favorites-toggle" hidden>
                <label for="favorites-toggle" class="favorites-toggle">
                    <i class="bx bx-star"></i>
                </label>
            </div>
        </div>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="#link"><i class="xi-ico xi-home"></i></a></li>
            <li class="breadcrumb-item active">MASTER DATA</li>
            <li class="breadcrumb-item active">설비 Capa실적 분석</li>
        </ol>
    </div>
    <div class="header-setting">
        <div class="header-btn">
            <div class="filter-toggle-container">
                <span class="toggle-title">Search Area</span>
                <input type="checkbox" id="favorites-toggle-switch" hidden checked>
                <label for="favorites-toggle-switch" class="switch"></label>
            </div>
        </div>
    </div>
</div>
<!-- /e:Content Header -->
<hr>
<!-- s:content -->
<section class="content-body" flex>
    <div class="content row" flex>
        <div class="col-lg-12" flex>
            <div class="content-box content-filter">
                <div class="box-body">
                    <div class="list-filter">
                        <div id="pnlSearch" class="filter-content form-inline">
                            <div class="form-group">
                                <div class="control-label"><label>DATE</label></div>
                                <div class="control-form">
                                    <div class="form-date-period">
                                        <input type="text" id="start_date" hs-df="start_date" class="form-datepicker form-control" data-toggle="datepicker" placeholder="Start Date">
                                        <span class="date-term">~</span>
                                        <input type="text" id="end_date" hs-df="end_date" class="form-datepicker form-control" data-toggle="datepicker" placeholder="End Date">
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="control-label"><label>사업부</label></div>
                                <div class="control-form">
                                    <select class="form-control" id="group_id" hs-df="group_id"></select>
                                </div>
                            </div>

                            <button type="button" class="btn btn-reset-icon"><span class="blind">filter reset</span></button>
                            <button id="btnSearch" type="button" class="btn btn-search-icon">Search<span class="blind">filter search</span></button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="content-box" flex>
                <!-- 헤더부분 정의-->
                <div class="box-header">
                    <div class="header-title">Lot별 공정순서별 정보<span class="title-list-count"><small></small></span></div>
                    <div class="header-btn">
                        <button id="btn_grid_save" type="button" class="btn btn-save">save</button>
                        <button id="btn_excel_download" type="button" class="btn btn-download">excel</button>
                        <button id="btn_grid_setting" type="button" class="btn btn-setting-icon"><span class="blind">setting</span></button>
                    </div>
                </div>
                <!-- 바디부분 정의-->
                <div class="box-body" flex>
                    <div class="grid-container" flex>
                        <div id="resource_capa_info" data-grid-id="RESOURCE_CAPA"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- /e:content -->
<!-- s:modal -->
<div id="modalDialog" style="display:none; position:absolute; height:400px;width:600px;">
    <div class="modal-content animate-top">
        <div id="modal-header" class="modal-header">
            <h5 class="modal-title">PERSONALIZATION</h5>
            <button type="button" class="btn-popup-close">
                <span class="xi-close-min" aria-hidden="true"></span>
            </button>
        </div>
        <div class="modal-body" id="panel_input">
            <div class="row">
                <div class="col-sm-12">
                    <div class="form-group">
                        <div class="control-label"><label>Dimension</label></div>
                    </div>
                </div>
            </div>
            <div class="grid-container" flex>
                <div id="dimension_grid"></div>
            </div>
        </div>
        <div class="modal-footer">
            <button id="btnSave_dimension" type="button" class="btn btn-save">저장</button>
            <button type="button" class="btn btn-close btn-popup-close">닫기</button>
        </div>
    </div>
</div>
<!-- /e:modal -->