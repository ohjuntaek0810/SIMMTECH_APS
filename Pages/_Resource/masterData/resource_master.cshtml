@page
@model HS.Web.Pages.resource_master
@{
    string CLIENT = Model.Params["CLIENT"].AsString();
    string R = Model.Params["R"].AsString();
    string W = Model.Params["W"].AsString();
}


<script>

    // 헤더컬럼 초기값 정의
    const defaultColumns = [
        { dataField: "GROUP", label: "GROUP", width: 80, editable: false, align:"center" },
        { dataField: "CLASS CODE", label: "CLASS CODE", width: 100, editable: false },
        { dataField: "CLASS NAME", label: "CLASS NAME", width: 145, editable: false },
        { dataField: "DEPARTMENT CODE", label: "DEPARTMENT CODE", width: 140, editable: false },
        { dataField: "DEPARTMENT NAME", label: "DEPARTMENT NAME", width: 140, editable: false },
        { dataField: "DEPARTMENT GROUP", label: "DEPARTMENT GROUP", width: 145, editable: false },
        { dataField: "RESOURCE GROUP", label: "RESOURCE GROUP", width: 130, editable: false },
        { dataField: "RESOURCE CAPA ID", label: "RESOURCE CAPA ID", width: 160, editable: true, visible:false },
        {
            dataField: "RESOURCE CAPA NAME", label: "RESOURCE CAPA NAME", width: 160, editable: true
            , displayField: "RESOURCE CAPA ID"
            , popValueField: "NAME"
            , popTextField: "CODE"
            , type: "poptextbox"
            , grid: {                    // 팝업 그리드 속성 정의
                width: "400px",
                height: "300px",
                dataurl: "/api/data/APS_RESOURCE_GROUP",
                columns: [
                    { label: "CODE", dataField: "CODE", width: 200 },
                    { label: "NAME", dataField: "NAME", width: 200 },
                ]
            }
        },
        { dataField: "RESOURCE ID", label: "RESOURCE ID", width: 100, editable: false },
        { dataField: "RESOURCE CODE", label: "RESOURCE CODE", width: 130, editable: false },
        { dataField: "RESOURCE NAME", label: "RESOURCE NAME", width: 145, editable: false },
        { dataField: "SITE", label: "SITE", width: 80, editable: false, align:"center" },
        { dataField: "APS SITE", label: "APS SITE", width: 100, editable: false },
        { dataField: "APS USE(Y/N)", label: "APS USE(Y/N)", width: 100, editable: true, align:"center" },
        { dataField: "MES USE(Y/N)", label: "MES USE(Y/N)", width: 105, editable: false, align:"center" },
        { dataField: "APPLY", label: "APPLY", width: 105, editable: false, align:"center" },
        { 
            dataField: "PATTERN TYPE", 
            label: "PATTERN TYPE", 
            width: 105, 
            editable: true, 
            align:"center" 
        },
        { dataField: "OUTSOURCING", label: "OUTSOURCING", width: 120, editable: true, align:"center" },
        { dataField: "ECIM", label: "ECIM", width: 65, editable: false, align:"center" },
        { dataField: "VIRTUAL", label: "VIRTUAL", width: 90, editable: false, align:"center" },
        { dataField: "MAIN", label: "MAIN", width: 70, editable: false, align:"center" },
        { dataField: "TACT TIME", label: "TACT TIME", width: 90, editable: false, align:"right", type:"number" },
        { dataField: "CAPA/MONTH", label: "CAPA/MONTH", width: 110, editable: false, align:"right", type:"number" },
        { dataField: "CAPA/DAY", label: "CAPA/DAY", width: 90, editable: false, align:"right", type:"number" },
        { dataField: "OPERATION RATE", label: "OPERATION RATE", width: 125, editable: false, align:"right", type:"number",precision: 2 },
        { dataField: "DOWN TIME", label: "DOWN TIME", width: 90, editable: false, align:"right", type:"number", precision: 2 },
        { dataField: "THICKNESS MIN", label: "THICKNESS MIN", width: 125, editable: false, align:"center", type:"number", precision: 3 },
        { dataField: "THICKNESS MAX", label: "THICKNESS MAX", width: 125, editable: false, align:"center", type:"number", precision: 3 },
        { dataField: "XWPNL MIN", label: "XWPNL MIN", width: 100, editable: false, align:"center", type:"number" },
        { dataField: "XWPNL MAX", label: "XWPNL MAX", width: 100, editable: false, align:"center", type:"number" },
        { dataField: "YWPNL MIN", label: "YWPNL MIN", width: 100, editable: false, align:"center", type:"number" },
        { dataField: "YWPNL MAX", label: "YWPNL MAX", width: 100, editable: false, align:"center", type:"number" },
        { dataField: "MAKER", label: "MAKER", width: 80, editable: false },
        { dataField: "REV DATE", label: "REV DATE", width: 130, editable: false, align:"center" },
        { dataField: "UPDATE DATE", label: "UPDATE DATE", width: 130, editable: false, align:"center" },
        { dataField: "UPDATE ID", label: "UPDATE ID", width: 120, editable: false, align:"center" }
        
    ];

    $hs.handler = {
        "btn_reset" : {
            click: function() {
                // 값 초기화
                $hs.$("pnlSearch").reset();
            }
        },
        "txtSearch": {
            keyup: function (data) {

                if (data.key == "Enter") {
                    $hs.handler["btnSearch"].click();
                    $hs.$("item_info").expand();
                }
            }
        },
        "btnSearch": {
            click: function () {

                let toServer = {};
                toServer["terms"] = $hs.$("pnlSearch").val();

                $hs.fetch({
                    command: "search",
                    param: toServer
                }).then(fromServer => {
                    $hs.$("resource_info").data(fromServer["data"]);
                    $('#total_cnt').text('(Total Count:' + fromServer["data"].length + ')');
                }).catch(e => $hs.errorBox(e))
            }
        },
        "btn_grid_save": {
            click: function () {
                let updated_data = [];
                // 클릭 이력으로 수정 or 입력여부 체크
                $hs.$("resource_info").data().forEach(item => {
                    if(item.$rowChecked == false ) {
                        updated_data.push(item);
                    }
                });

                let toServer = {};
                toServer["data"] = updated_data;

                console.log(toServer);

                if(toServer["data"].length == 0) {
                    alert("변경된 데이터가 없습니다.");
                }

                $hs.fetch({
                    command: "save",
                    param: toServer
                }).then(fromServer => {
                    alert("저장되었습니다."); 
                    $hs.handler["btnSearch"].click();
                }).catch(e => $hs.errorBox(e))
            },
        },
        "btn_excel_download": {
            click : function() {
                $hs.util.$CommonUtil.excelDownload("resource_info", "resource_info");
            }
        },
        "btn_grid_setting" : {  // dimension 세팅
            click : function() {
                // 그리드 세팅 modal open
                // param : modal_id, grid_id, dimension_grid_id
                $hs.util.$CommonUtil.openGridSettingModal("modalDialog", "resource_info", "dimension_grid");
            }
        },
        "btnSave_dimension" : { // dimension 변경내용 저장
            click : function() {
                $hs.util.$CommonUtil.saveGridSetting("modalDialog", "resource_info", "dimension_grid", defaultColumns);

                
            }
        },
        "resource_info" : {
            contextHeaderClick: function (data) {
                $hs.util.$CommonUtil.getHeaderContextClick(data);
            },
            headerFormat: function (data) {
                if (data.dataField == "APS USE(Y/N)") {
                    data.cell.css("color", "blue");
                }
                if (data.dataField == "OUTSOURCING") {
                    data.cell.css("color", "blue");
                }
                if (data.dataField == "RESOURCE CAPA ID") {
                    data.cell.css("color", "blue");
                }
                if (data.dataField == "RESOURCE CAPA NAME") {
                    data.cell.css("color", "blue");
                }
                if (data.dataField == "PATTERN TYPE") {
                    data.cell.css("color", "blue");
                }
                data.cell.css("text-align", "center");
            },
        },
        "group_id" : {
            change : function(data){
                // 넘겨줄 파라미터
                let division_id = data.value;

                $hs.html.select.init({
                    id: "dept_class_name",
                    dataurl: "/api/data/DEPARTMENT_CLASS?DIVISION_ID=" + division_id,
                    valueMember: "CODE",
                    displayMember: "NAME",
                    val: ""
                });

                // dept_class_name
                $hs.html.select.init({
                    id: "dept_name",
                    dataurl: "/api/data/DEPARTMENT_NAME?DIVISION_ID=" + division_id,
                    valueMember: "CODE",
                    displayMember: "NAME",
                    val: ""
                });

                // resource_name
                $hs.html.select.init({
                    id: "resource_name",
                    dataurl: "/api/data/RESOURCE_NAME?DIVISION_ID=" + division_id,
                    valueMember: "CODE",
                    displayMember: "CODE",
                    val: ""
                });

                // resource_code
                $hs.html.select.init({
                    id: "resource_code",
                    dataurl: "/api/data/RESOURCE_CODE?DIVISION_ID=" + division_id,
                    valueMember: "CODE",
                    displayMember: "CODE",
                    val: ""
                });
            }
        },
        "dept_class_name" : {
            change : function(data) {
                let DEPARTMENT_CLASS_CODE = data.value;

                // dept_class_name
                $hs.html.select.init({
                    id: "dept_name",
                    dataurl: "/api/data/DEPARTMENT_NAME?DEPARTMENT_CLASS_CODE=" + DEPARTMENT_CLASS_CODE,
                    valueMember: "CODE",
                    displayMember: "NAME",
                    val: ""
                });

                // resource_name
                $hs.html.select.init({
                    id: "resource_name",
                    dataurl: "/api/data/RESOURCE_NAME?DEPARTMENT_CLASS_CODE=" + DEPARTMENT_CLASS_CODE,
                    valueMember: "CODE",
                    displayMember: "CODE",
                    val: ""
                });

                // resource_code
                $hs.html.select.init({
                    id: "resource_code",
                    dataurl: "/api/data/RESOURCE_CODE?DEPARTMENT_CLASS_CODE=" + DEPARTMENT_CLASS_CODE,
                    valueMember: "CODE",
                    displayMember: "CODE",
                    val: ""
                });
            }
        },
        "dept_name" : {
            change : function(data) {
                let DEPT_NAME = data.value;

                // resource_name
                $hs.html.select.init({
                    id: "resource_name",
                    dataurl: "/api/data/RESOURCE_NAME?DEPT_CODE=" + DEPT_NAME,
                    valueMember: "CODE",
                    displayMember: "CODE",
                    val: ""
                });

                // resource_code
                $hs.html.select.init({
                    id: "resource_code",
                    dataurl: "/api/data/RESOURCE_CODE?DEPT_CODE=" + DEPT_NAME,
                    valueMember: "CODE",
                    displayMember: "CODE",
                    val: ""
                });
            }
        },
        "resource_name" : {
            change : function(data) {
                let RESOURCE_NAME = data.value;

                // resource_code
                $hs.html.select.init({
                    id: "resource_code",
                    dataurl: "/api/data/RESOURCE_CODE?RESOURCE_NAME=" + RESOURCE_NAME,
                    valueMember: "CODE",
                    displayMember: "CODE",
                    val: ""
                });
            }
        },
    }

    $hs.load(() => {
        // 현재 localStorage에 저장된 메뉴 ID 가져옴
        var curMenuId = localStorage.getItem("curMenuId"); 
        // 즐겨찾기 여부 체크 후 버튼 리스너 추가
        $hs.util.$CommonUtil.checkFavorite(curMenuId);

        // search
        $hs.ui.button.init({ id: "btnSearch", class: ["smart-btn", "btn-search"] });

        // grid save
        $hs.ui.button.init({ id: "btn_grid_save", enabled: @W });

        // excel download
        $hs.ui.button.init({ id: "btn_excel_download"});
          
        // panel
        $hs.html.panel.init({ id: "pnlSearch" });

        // grid setting
        $hs.ui.button.init({ id: "btn_grid_setting"});
        $hs.ui.button.init({ id: "btnSave_dimension"});

        // resource_info
        $hs.dx.grid.init({
            id: "resource_info",
            width: "100%",
            height: "100%",
            sortable: true,
            selectMode: "single",
            rownumber: false,
            filterable: true,
            editable: true,
            handler: true,
            reOrdering: true, // 컬럼 재배치 여부
            headerContextmenu : ["Sort Asc", "Sort Desc", "Sort Clear", "Fixed", "Unfixed", "Hide", "Hide Clear",
                {
                    menu : "CAL",
                    child : [
                        "Count",
                        "Avg",
                        "Max",
                        "Min",
                        "Sum",
                        "Std. Div"
                    ]
                }
            ],
        })

        // 그리드 컬럼가져오기
        // 1. id로 사용할 grid_id(js용)
        // 2. 초기화용 컬럼들 (LIST)
        // <div id="resource_info" data-grid-id="RESOURCE_GRID"></div>
        $hs.util.$CommonUtil.getGridSetting("resource_info", defaultColumns);

        const _instance = $hs.$("resource_info")._instance;
        // 컬럼 라인 그리기
        _instance.option('showColumnLines', true);
        _instance.option('rowAlternationEnabled', false);
        _instance.option('showBorders', true);
        _instance.option('scrolling', {
            showScrollbar: 'always',
            useNative: true
        });

        // demension grid
        $hs.dx.grid.init({
            id: "dimension_grid",
            width: "100%",
            height: "300px",
            sortable: true,
            selectMode: "single",
            dragRow: true,
            rownumber: false,
            filterable: false,
            editable: true,
            handler: true,
        }).columns(col => {
            col.add({ dataField: "dataField", label: "dataField", width: 200, editable: false, visible:false })
            col.add({ dataField: "editable", label: "editable", width: 200, editable: false, visible:false })
            col.add({ dataField: "name", label: "NAME", width: 200, editable: false })
            col.add({ dataField: "visible", label: "VISIBLE", width: 80, editable: true, type: "boolean" })
            col.add({ dataField: "width", label: "WIDTH", width: 80, editable: true })
            col.add({ dataField: "fix", label: "FIX", width: 80, editable: true, type: "boolean" })
        });

        // 사업부
        $hs.html.select.init({
            id: "group_id",
            dataurl: "/api/data/DIVISION_LIST",
            valueMember: "CODE",
            displayMember: "NAME",
            val: ""
            // val: "404",
            // emptyFirst : false 기본값 false 맨위에 빈 항목을 추가 한다.
        });

         // dept_class_name
        $hs.html.select.init({
            id: "dept_class_name",
            dataurl: "/api/data/DEPARTMENT_CLASS",
            valueMember: "CODE",
            displayMember: "NAME",
            val: ""
        });

        // dept_class_name
        $hs.html.select.init({
            id: "dept_name",
            dataurl: "/api/data/DEPARTMENT_NAME",
            valueMember: "CODE",
            displayMember: "NAME",
            val: ""
        });

        // resource_name
        $hs.html.select.init({
            id: "resource_name",
            dataurl: "/api/data/RESOURCE_NAME",
            valueMember: "CODE",
            displayMember: "CODE",
            val: ""
        });

        // resource_code
        $hs.html.select.init({
            id: "resource_code",
            dataurl: "/api/data/RESOURCE_CODE",
            valueMember: "CODE",
            displayMember: "CODE",
            val: ""
        });

        $hs.html.select.init({ id: "app_use", data: [{ label : "ALL", value: "" }, { label : "Y", value: "Y" }, { label : "N", value: "N" }], val: "" });
        $hs.html.select.init({ id: "OUTSOURCING", data: [{ label : "ALL", value: "" }, { label : "Y", value: "Y" }, { label : "N", value: "N" }], val: "" });
        $hs.html.select.init({ id: "mes_use", data: [{ label : "ALL", value: "" }, { label : "Y", value: "Y" }, { label : "N", value: "N" }], val: "" });

        // SITE
        $hs.html.select.init({
            id: "SITE",
            dataurl: "/api/data/SITE",
            valueMember: "CODE",
            displayMember: "NAME",
            val: ""
        });


        
        // 팝업
        $hs.html.$popup.init('modalDialog');

        $hs.html.input.initAll();
    });

</script>

<!-- s:Content Header (Page header) -->
<div class="content-header">
    <div class="header-location">
        <div class="header-title">
            <span class="sub-title">Resource Master</span>
            <div class="toggle-container-favorites">
                <input type="checkbox" id="favorites-toggle" hidden>
                <label for="favorites-toggle" class="favorites-toggle">
                    <i class="bx bx-star"></i>
                </label>
            </div>
        </div>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="#link"><i class="xi-ico xi-home"></i></a></li>
            <li class="breadcrumb-item active">MASTER DATA</li>
            <li class="breadcrumb-item active">Resource Master</li>
        </ol>
    </div>
    <div class="header-setting">
        <div class="header-btn">
            <div class="filter-toggle-container">
                <span class="toggle-title">Search Area</span>
                <input type="checkbox" id="favorites-toggle-switch" hidden checked>
                <label for="favorites-toggle-switch" class="switch"></label>
            </div>
        </div>
    </div>
</div>
<!-- /e:Content Header -->
<hr>
<!-- s:content -->
<section class="content-body" flex>
    <div class="content row" flex>
        <div class="col-lg-12" flex>
            <div class="content-box content-filter">
                <div class="box-body">
                    <div class="list-filter">
                        <div id="pnlSearch" class="filter-content form-inline">
                            <div class="form-group">
                                <div class="control-label"><label>GROUP</label></div>
                                <div class="control-form">
                                    <select class="form-control" id="group_id" hs-df="group_id" hs-handler="true"></select>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="control-label"><label>DEPARTMENT CLASS</label></div>
                                <div class="control-form">
                                    <select style="width:200px !important;" class="form-control" id="dept_class_name" hs-df="dept_class_name" hs-handler="true"></select>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="control-label"><label>DEPARTMENT</label></div>
                                <div class="control-form">
                                    <select style="width:200px !important;" class="form-control" id="dept_name" hs-df="dept_name" hs-handler="true"></select>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="control-label"><label>RESOURCE NAME</label></div>
                                <div class="control-form">
                                    <select style="width:200px !important;" class="form-control" id="resource_name" hs-df="resource_name" hs-handler="true"></select>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="control-label"><label>RESOURCE CODE</label></div>
                                <div class="control-form">
                                    <select style="width:200px !important;" class="form-control" id="resource_code" hs-df="resource_code" hs-handler="true"></select>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="control-label"><label>APP USE</label></div>
                                <div class="control-form">
                                    <select class="form-control" id="app_use" hs-df="app_use"></select>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="control-label"><label>외주</label></div>
                                <div class="control-form">
                                    <select class="form-control" id="OUTSOURCING" hs-df="outsourcing"></select>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="control-label"><label>MES USE</label></div>
                                <div class="control-form">
                                    <select class="form-control" id="mes_use" hs-df="mes_use"></select>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="control-label"><label>위치</label></div>
                                <div class="control-form">
                                    <select class="form-control" id="SITE" hs-df="site"></select>
                                </div>
                            </div>

                            <button id="btn_reset" type="button" class="btn btn-reset-icon" hs-btn><span class="blind">filter reset</span></button>
                            <button id="btnSearch" type="button" class="btn btn-search-icon">Search<span class="blind">filter search</span></button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="content-box" flex>
                <!-- 헤더부분 정의-->
                <div class="box-header">
                    <div class="header-title">
                        Resource 정보
                        <span class="title-list-count">
                            <small id="total_cnt"></small><small id="grid_cal" class="" style="color: black;margin-left: 10px;font-weight: 500;"></small>
                        </span>
                    </div>
                    <div class="header-btn">
                        <button id="btn_grid_save" type="button" class="btn btn-save">save</button>
                        <button id="btn_excel_download" type="button" class="btn btn-download">excel</button>
                        <button id="btn_grid_setting" type="button" class="btn btn-setting-icon"><span class="blind">setting</span></button>
                    </div>
                </div>
                <!-- 바디부분 정의-->
                <div class="box-body" flex>
                    <div class="grid-container" flex>
                        <div id="resource_info" data-grid-id="RESOURCE"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- /e:content -->
<!-- s:modal -->
<div id="modalDialog" style="display:none; position:absolute; height:400px;width:600px;">
    <div class="modal-content animate-top">
        <div id="modal-header" class="modal-header">
            <h5 class="modal-title">PERSONALIZATION</h5>
            <button type="button" class="btn-popup-close">
                <span class="xi-close-min" aria-hidden="true"></span>
            </button>
        </div>
        <div class="modal-body" id="panel_input">
            <div class="row">
                <div class="col-sm-12">
                    <div class="form-group">
                        <div class="control-label"><label>Dimension</label></div>
                    </div>
                </div>
            </div>
            <div class="grid-container" flex>
                <div id="dimension_grid"></div>
            </div>
        </div>
        <div class="modal-footer">
            <button id="btnSave_dimension" type="button" class="btn btn-save">저장</button>
            <button type="button" class="btn btn-close btn-popup-close">닫기</button>
        </div>
    </div>
</div>
<!-- /e:modal -->